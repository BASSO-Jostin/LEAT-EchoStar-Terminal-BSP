[{"id":"c426c53a.b9a3c8","type":"debug","z":"4fc07730.cdb438","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":970,"y":2460,"wires":[]},{"id":"72ac15a3.d8fc2c","type":"inject","z":"4fc07730.cdb438","name":"Every 10 Seconds","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"10","crontab":"","once":false,"onceDelay":"","topic":"","payload":"","payloadType":"date","x":450,"y":2280,"wires":[["a25fc82a.082808"]]},{"id":"a25fc82a.082808","type":"AWS SQS","z":"4fc07730.cdb438","aws":"a2571707.b48ab8","operation":"ReceiveMessage","QueueUrl":"https://sqs.us-east-1.amazonaws.com/412895669901/echoA4B","Label":"","AWSAccountIds":"","Actions":"","ReceiptHandle":"","VisibilityTimeout":"","Entries":"","QueueName":"","MessageBody":"","Attributes":"","Tags":"","TagKeys":"","name":"Echostar_sqs_reada4b","x":710,"y":2280,"wires":[["1432470e.3aae59"],[]]},{"id":"2d066dfc.bea9d2","type":"AWS SQS","z":"4fc07730.cdb438","aws":"a2571707.b48ab8","operation":"DeleteMessage","QueueUrl":"https://sqs.us-east-1.amazonaws.com/412895669901/echoA4B","Label":"","AWSAccountIds":"","Actions":"","ReceiptHandle":"","VisibilityTimeout":"","Entries":"","QueueName":"","MessageBody":"","Attributes":"","Tags":"","TagKeys":"","name":"Echostar_sqs_delete","x":1020,"y":2320,"wires":[[],[]]},{"id":"30b7a980.abde66","type":"function","z":"4fc07730.cdb438","name":"","func":"var msg2= {};\n\nmsg2.ReceiptHandle = msg.payload.Messages[0].ReceiptHandle;\nreturn msg2;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":800,"y":2320,"wires":[["2d066dfc.bea9d2"]]},{"id":"28fa386b.6eea38","type":"function","z":"4fc07730.cdb438","name":"","func":"var msg1 = {};\nvar msg2 = {};\nvar test = \"nothing\";\n\nif (msg.payload.Messages[0].ReceiptHandle != null) {\n    \n   if (msg.payload.Messages[0].Body.snr_gateway != null) { \n\nvar array = [];\n//limit to first gateway, keep it simple\n array = [{\n rssi: parseInt(msg.payload.Messages[0].Body.rssi_gateway),\n snr: parseInt(msg.payload.Messages[0].Body.snr_gateway),\n fCnt : parseInt(msg.payload.Messages[0].Body.fCnt),\n //frequency: parseInt(msg.payload.Messages[0].Body.frequency),\n timestamp: msg.payload.Messages[0].Body.time,\n sf: parseInt(msg.payload.Messages[0].Body.spreadingFactor),\n  }\n];\n\n\n}\n\n\n\n  if (msg.payload.Messages[0].Body.loRaSNR != null) { \n\n\n//limit to first gateway, keep it simple\n array = [{\n rssi3: parseInt(msg.payload.Messages[0].Body.rssi),\n snr3: parseInt(msg.payload.Messages[0].Body.loRaSNR),\n //frequency2: msg.payload.Messages[0].Body.frequency,\n timestamp: msg.payload.Messages[0].Body.time,\n sf: parseInt(msg.payload.Messages[0].Body.spreadingFactor),\n }\n];\n\n\n}\n\n\nmsg1.payload = array;\n\nreturn [msg1];\n\n}\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":800,"y":2400,"wires":[["ad77ed6a.c768b"]]},{"id":"ad77ed6a.c768b","type":"influxdb out","z":"4fc07730.cdb438","influxdb":"1abb2b94.cfcc04","name":"","measurement":"echoA4B","precision":"","retentionPolicy":"","database":"","retentionPolicyV18Flux":"","org":"","bucket":"","x":1110,"y":2400,"wires":[]},{"id":"3fe29375.9e269c","type":"json","z":"4fc07730.cdb438","name":"","property":"payload.Messages[0].Body","action":"","pretty":false,"x":610,"y":2360,"wires":[["28fa386b.6eea38","30b7a980.abde66","fe2fd1eb.d0c0a","c426c53a.b9a3c8"]]},{"id":"1432470e.3aae59","type":"switch","z":"4fc07730.cdb438","name":"","property":"payload.Messages[0].ReceiptHandle","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":430,"y":2360,"wires":[["3fe29375.9e269c"]]},{"id":"3867bb94.b5c194","type":"debug","z":"4fc07730.cdb438","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1150,"y":2520,"wires":[]},{"id":"fe2fd1eb.d0c0a","type":"function","z":"4fc07730.cdb438","name":"","func":"\nvar msg1 = {};\nvar msg2 = {};\n//var bytes  = [];\nif (msg.payload.Messages[0].Body.raw_message != undefined) { \n    // Convert from Hex String to array of bytes \n    var test = msg.payload.Messages[0].Body.raw_message;\n    test = new Buffer(test, 'base64').toString('hex');\n    let bytes = [];\n    for (let c = 0; c < test.length; c += 2)\n        bytes.push(parseInt(test.substr(c, 2), 16));\n\n    //bytes = Array.from(test, hex); \n    var temperature = ((bytes[0] << 8) | bytes[1]);\n     if(temperature >= 0x8000) temperature = -(0x10000 - temperature);\n    msg1.temperature = temperature / 100.0;\n    msg1.humidity = bytes[2]/2;\n    var pressure = ((bytes[3] << 8) | bytes[4]);\n    msg1.pressure = pressure;\n    x = bytes[5];\n     if (x >= 0x80) x = -(0x100 - x);\n    msg1.accx = x/50;\n    y = bytes[6];\n     if (y >= 0x80) y = -(0x100 - y);\n    msg1.accy = y/50;\n    z = bytes[7];\n     if (z >= 0x80) z = -(0x100 - z);\n    msg1.accz = z/50;\n  \n  var lat = ((bytes[8] << 16) + (bytes[9] << 8) + bytes[10]) / 16777215.0 * 180.0-90;\n  var lng = ((bytes[11] << 16) + (bytes[12] << 8) + bytes[13]) / 16777215.0 * 360.0-180;\n  var alt = ((bytes[14] << 16) + (bytes[15] << 8) + bytes[16]) ;\n  \n  \n     if(alt>= 100000) temperature = -(16777215 - alt);\n    msg1.lat=lat;\n    msg1.lon=lng;\n    msg1.alt=alt/10;\n \n    msg1.nbsat=bytes[17];\n    var bat = ((bytes[18] << 8) | bytes[19]);\n       msg1.bat=bat;\n       \n       msg1.ttf=bytes[20];\n    \n    msg1.bytes=bytes.length;\n    \n   // msg1.bytes_raw=bytes;\n    \n    msg2.payload = [msg1];\n    \n    return [msg2];\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":780,"y":2480,"wires":[["ad77ed6a.c768b","3867bb94.b5c194"]]},{"id":"a2571707.b48ab8","type":"amazon config","name":"AWS","region":"us-east-1","proxyRequired":false,"proxy":""},{"id":"1abb2b94.cfcc04","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"sensor","name":"","usetls":false,"tls":"db45ef78.d1fcd","influxdbVersion":"1.x","url":"http://localhost:8086","rejectUnauthorized":true},{"id":"db45ef78.d1fcd","type":"tls-config","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","servername":"eu1.cloud.thethings.network:8883","verifyservercert":false}]